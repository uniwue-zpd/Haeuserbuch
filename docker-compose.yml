services:
  frontend:
    image: haeuserbuch_frontend
    container_name: frontend
    build:
      context: ./haeuserbuch_frontend
    depends_on:
      - backend
    networks:
      - haeuserbuch_network
    restart: unless-stopped

  backend:
    image: haeuserbuch_backend
    container_name: backend
    build:
      context: ./haeuserbuch_backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    volumes:
      - "${WORKSPACE:?error}/uploads:/uploads"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - haeuserbuch_network
    restart: unless-stopped

  database:
    image: postgis/postgis:17-3.5-alpine
    container_name: haeuserbuch_db
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      # In case you have a database dump, uncomment the following line and change the file name
      # - ./<your_dump>.sql:/docker-entrypoint-initdb.d/<your_dump>.sql
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}" ]
      interval: 30s
      retries: 10
      start_period: 60s
    networks:
      - haeuserbuch_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine-slim
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - haeuserbuch_network
    restart: unless-stopped

networks:
  haeuserbuch_network:
    driver: bridge

volumes:
  db_data:
